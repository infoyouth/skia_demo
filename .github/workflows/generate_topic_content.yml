name: Generate Topic Content

on:
  workflow_dispatch:  # Allows the workflow to be triggered manually
  schedule:
    - cron: '0 0 * * *'  # Run every day at midnight (adjust as needed)

jobs:
  generate-content:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3

      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Install dependencies
        run: |
          pip install transformers
          pip install markdownify

      - name: Read topic from JSON file
        id: read_topic
        run: |
          import json
          from datetime import datetime
          with open('topics.json', 'r') as f:
              data = json.load(f)
          today = datetime.today().strftime('%d-%m-%Y')
          for entry in data['topics']:
              if entry['date'] == today:
                  print(f"::set-output name=topic::{entry['topic']}")
                  print(f"::set-output name=date::{entry['date']}")
                  break

      - name: Generate content using GPT-2
        id: generate_content
        run: |
          from transformers import pipeline
          import markdownify

          topic = '${{ steps.read_topic.outputs.topic }}'
          gpt2_pipeline = pipeline("text-generation", model="gpt2")
          
          prompt = f"Write a tutorial about {topic} covering Introduction, Key Concepts, How to Use, Common Pitfalls, and Advanced Use Cases."

          generated_text = gpt2_pipeline(prompt, max_length=1000)[0]['generated_text']
          markdown_content = markdownify.markdownify(generated_text)

          with open(f"{today}_{topic.replace(' ', '_')}.md", 'w') as f:
              f.write(f"# {topic}\n\n")
              f.write(markdown_content)

      - name: Commit and Push generated content
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions@github.com"
          git add .
          git commit -m "Added new topic: ${{ steps.read_topic.outputs.topic }} on ${{ steps.read_topic.outputs.date }}"
          git push

